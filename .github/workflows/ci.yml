name: CI

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: agency_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d agency_test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      # Используем localhost, потому что порт проброшен
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/agency_test
      ENV: dev
      RAW_DATA_PATH: data/raw/data.csv
      MODEL_SAVE_PATH: models/catboost_model.pkl

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-app.txt
          pip install -r requirements-dev.txt

      - name: Wait for Postgres to start
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for Postgres on localhost:5432…"
            sleep 2
          done

      - name: Initialize DB schema
        run: |
          python - <<'PYCODE'
          from src.db.session import init_db
          init_db()
          print("✅ Tables created in agency_test")
          PYCODE

      - name: Upgrade DB via Alembic
        run: alembic upgrade head
      - name: Check Docker Compose syntax
        run: docker compose -f docker-compose.prod.yml config
      - name: Build production image
        run: |
          docker build \
            --file Dockerfile \
            --target prod \
            --no-cache \
            --tag agency_app:prod \
            .
      - name: Install kubectl
        run: |
          curl -sSL "https://storage.googleapis.com/kubernetes-release/release/$( \
            curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt \
          )/bin/linux/amd64/kubectl" -o kubectl
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
      - name: Install kubeval
        run: |
          curl -sSL \
            https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz \
            | tar -xz
          sudo mv kubeval /usr/local/bin/
      - name: Generate combined K8s manifest
        run: kubectl kustomize k8s/base > /tmp/all.yaml

      - name: Validate K8s manifests
        run: kubeval /tmp/all.yaml
      - name: Run tests with coverage
        run: |
          pytest --maxfail=1 --disable-warnings -q \
            --cov=src --cov-report=term --cov-report=xml
